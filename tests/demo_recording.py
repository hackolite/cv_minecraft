#!/usr/bin/env python3
"""
D√©monstration du syst√®me d'enregistrement de gameplay
======================================================

Ce script montre comment utiliser programmatiquement le GameRecorder
pour automatiser l'enregistrement de sessions de jeu.

Usage:
    python3 demo_recording.py
"""

import sys
import os
import time

# Ajouter le r√©pertoire courant au path
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))


def demonstrate_recorder_api():
    """D√©montre l'utilisation de l'API GameRecorder."""
    print("=" * 60)
    print("D√©monstration de l'API GameRecorder")
    print("=" * 60)
    
    from minecraft_client_fr import GameRecorder
    
    # Cr√©er un recorder avec un r√©pertoire personnalis√©
    print("\n1. Cr√©ation d'un GameRecorder...")
    recorder = GameRecorder(output_dir="demo_recordings")
    print(f"   ‚úÖ Recorder cr√©√© - R√©pertoire: {recorder.output_dir}")
    
    # Configurer le FPS
    print("\n2. Configuration du FPS d'enregistrement...")
    recorder.set_fps(60)
    print(f"   ‚úÖ FPS configur√© √† 60")
    
    # D√©marrer l'enregistrement
    print("\n3. D√©marrage de l'enregistrement...")
    session_dir = recorder.start_recording()
    print(f"   ‚úÖ Enregistrement d√©marr√©")
    print(f"   üìÅ Session: {session_dir.name}")
    
    # Simuler une session de jeu
    print("\n4. Simulation d'une session de jeu (5 secondes)...")
    for i in range(5):
        time.sleep(1)
        print(f"   ‚è±Ô∏è  {i+1}s - Frames captur√©es: {recorder.frame_count}")
    
    # Arr√™ter l'enregistrement
    print("\n5. Arr√™t de l'enregistrement...")
    recorder.stop_recording()
    
    print("\n" + "=" * 60)
    print("D√©monstration termin√©e!")
    print("=" * 60)
    
    # Afficher le contenu du r√©pertoire de session
    if session_dir.exists():
        files = list(session_dir.glob("*"))
        print(f"\nüìÇ Fichiers cr√©√©s dans {session_dir}:")
        for f in files:
            print(f"   - {f.name}")


def demonstrate_multiple_sessions():
    """D√©montre l'enregistrement de plusieurs sessions."""
    print("\n" + "=" * 60)
    print("D√©monstration de sessions multiples")
    print("=" * 60)
    
    from minecraft_client_fr import GameRecorder
    
    recorder = GameRecorder(output_dir="demo_recordings")
    
    for i in range(3):
        print(f"\nüìπ Session {i+1}/3")
        session_dir = recorder.start_recording()
        print(f"   D√©marr√©: {session_dir.name}")
        
        # Simuler une courte session
        time.sleep(1)
        
        recorder.stop_recording()
        print(f"   Termin√© avec {recorder.frame_count} frames")
        
        # Petite pause entre les sessions
        if i < 2:
            time.sleep(0.5)


def demonstrate_fps_comparison():
    """D√©montre l'impact du FPS sur la capture."""
    print("\n" + "=" * 60)
    print("Comparaison de diff√©rents FPS")
    print("=" * 60)
    
    from minecraft_client_fr import GameRecorder
    
    for fps in [15, 30, 60]:
        print(f"\nüé¨ Test avec {fps} FPS")
        
        recorder = GameRecorder(output_dir="demo_recordings")
        recorder.set_fps(fps)
        
        recorder.start_recording()
        time.sleep(2)  # 2 secondes d'enregistrement
        recorder.stop_recording()
        
        expected_frames = fps * 2
        print(f"   Frames attendues: ~{expected_frames}")
        print(f"   Frames captur√©es: {recorder.frame_count}")
        print(f"   Intervalle: {recorder.capture_interval:.4f}s")


def show_usage_examples():
    """Affiche des exemples d'utilisation."""
    print("\n" + "=" * 60)
    print("Exemples d'utilisation dans le code")
    print("=" * 60)
    
    examples = """
# Exemple 1: Enregistrement basique
from minecraft_client_fr import GameRecorder

recorder = GameRecorder()
recorder.start_recording()
# ... jouer au jeu ...
recorder.stop_recording()

# Exemple 2: Configuration personnalis√©e
recorder = GameRecorder(output_dir="mes_videos")
recorder.set_fps(60)  # 60 FPS pour plus de fluidit√©
session = recorder.start_recording()
# ... jouer au jeu ...
recorder.stop_recording()

# Exemple 3: Int√©gration dans une boucle de jeu
recorder = GameRecorder()
recording_active = False

def on_f9_pressed():
    global recording_active
    if not recording_active:
        recorder.start_recording()
        recording_active = True
    else:
        recorder.stop_recording()
        recording_active = False

def game_loop():
    while running:
        render_frame()
        if recording_active:
            recorder.capture_frame(window)
        
# Exemple 4: Enregistrement automatique avec timer
import threading

recorder = GameRecorder()
recorder.start_recording()

def stop_after_delay(seconds):
    time.sleep(seconds)
    recorder.stop_recording()
    print(f"Enregistrement auto-arr√™t√© apr√®s {seconds}s")

# Arr√™ter apr√®s 30 secondes
timer = threading.Timer(30, stop_after_delay, args=[30])
timer.start()
"""
    
    print(examples)


def main():
    """Point d'entr√©e principal."""
    print("\nüéÆ D√©monstration du syst√®me d'enregistrement de gameplay")
    print("=========================================================\n")
    
    try:
        # D√©monstration de l'API
        demonstrate_recorder_api()
        
        # Sessions multiples
        input("\n[Appuyez sur Entr√©e pour continuer avec les sessions multiples...]")
        demonstrate_multiple_sessions()
        
        # Comparaison FPS
        input("\n[Appuyez sur Entr√©e pour continuer avec la comparaison FPS...]")
        demonstrate_fps_comparison()
        
        # Exemples de code
        input("\n[Appuyez sur Entr√©e pour voir les exemples d'utilisation...]")
        show_usage_examples()
        
        print("\n" + "=" * 60)
        print("‚úÖ D√©monstration compl√®te!")
        print("=" * 60)
        
        # Nettoyage
        import shutil
        demo_dir = "demo_recordings"
        if os.path.exists(demo_dir):
            print(f"\nüßπ Nettoyage du r√©pertoire de d√©monstration: {demo_dir}")
            response = input("   Voulez-vous supprimer les fichiers de d√©monstration? [o/N] ")
            if response.lower() == 'o':
                shutil.rmtree(demo_dir)
                print(f"   ‚úÖ {demo_dir} supprim√©")
            else:
                print(f"   üíæ {demo_dir} conserv√©")
        
        return 0
        
    except KeyboardInterrupt:
        print("\n\n‚ö†Ô∏è  D√©monstration interrompue par l'utilisateur")
        return 1
    except Exception as e:
        print(f"\n‚ùå Erreur: {e}")
        import traceback
        traceback.print_exc()
        return 1


if __name__ == "__main__":
    sys.exit(main())
